# Estimate a regression model.
lm_full_model <- lm(data = car_data,
formula = car_price ~ mileage + accident + damage)
# Dependent Variable: Automobile values
beta_0          <-   50000     # Intercept
beta_mileage    <- -  0.20     # Slope coefficient for mileage
beta_accident   <- -  5000     # Slope coefficient for accident
beta_damage     <- - 20000     # Slope coefficient for damage
# beta_damage     <-       0   # Alternate Slope coefficient for damage
# Distribution of mileage.
avg_mileage <- 50000
sd_mileage  <- 10000
# Fraction of dataset in an accident.
pct_accident <- 0.4
# Frequency of damages (only after an accident).
prob_damage <- 0.10
# Additional terms:
sigma_2 <- 4000    # Variance of error term
num_obs <- 100      # Number of observations in dataset
# Call the other_sample function from sim_tools.R.
car_data <- other_sample(beta_0, beta_mileage, beta_accident, beta_damage,
avg_mileage, sd_mileage, pct_accident, prob_damage,
sigma_2, num_obs)
car_data <- other_sample(beta_0, beta_mileage, beta_accident, beta_damage,
avg_mileage, sd_mileage, pct_accident, prob_damage,
sigma_2, num_obs)
# Estimate a regression model.
lm_full_model <- lm(data = car_data,
formula = car_price ~ mileage + accident + damage)
beta_0          <-   50000     # Intercept
beta_mileage    <- -  0.20     # Slope coefficient for mileage
beta_accident   <- -  5000     # Slope coefficient for accident
beta_damage     <- - 20000     # Slope coefficient for damage
car_data <- other_sample(beta_0, beta_mileage, beta_accident, beta_damage,
avg_mileage, sd_mileage, pct_accident, prob_damage,
sigma_2, num_obs)
rm(list=ls(all=TRUE))
getwd()
getwd()
beta_0          <-   50000     # Intercept
beta_mileage    <- -  0.20     # Slope coefficient for mileage
beta_accident   <- -  5000     # Slope coefficient for accident
beta_damage     <- - 20000     # Slope coefficient for damage
# beta_damage     <-       0   # Alternate Slope coefficient for damage
# Distribution of mileage.
avg_mileage <- 50000
sd_mileage  <- 10000
# Fraction of dataset in an accident.
pct_accident <- 0.4
# Frequency of damages (only after an accident).
prob_damage <- 0.10
# Additional terms:
sigma_2 <- 4000    # Variance of error term
num_obs <- 100      # Number of observations in dataset
# Call the other_sample function from sim_tools.R.
car_data <- other_sample(beta_0, beta_mileage, beta_accident, beta_damage,
avg_mileage, sd_mileage, pct_accident, prob_damage,
sigma_2, num_obs)
# Call the other_sample function from sim_tools.R.
car_data <- other_sample(beta_0, beta_mileage, beta_accident, beta_damage,
avg_mileage, sd_mileage, pct_accident, prob_damage,
sigma_2, num_obs)
rm(list=ls(all=TRUE))
rm(list=ls(all=TRUE))
setwd(wd_path)
rm(list=ls(all=TRUE))
wd()
wd
Getwd()
getwd()
setwd("~/QMB6316F24/demo_06_merging_data")
setwd("~/QMB6316F24/demo_06_merging_data")
setwd("~/QMB6316course/assignment_03")
setwd("~/QMB6316F24/demo_06_merging_data")
Employees <- read.csv('Employees.csv')
Departments <- read.csv('Departments.csv')
View(Departments)
View(Employees)
inner_merge <- merge(Employees, Departments)
inner_merge
left_outer_merge <- merge(Employees, Departments, all.x = TRUE)
left_outer_merge
right_outer_merge <- merge(Employees, Departments, all.y = TRUE)
right_outer_merge
full_outer_merge <- merge(Employees, Departments, all = TRUE)
full_outer_merge
rm(list=ls(all=TRUE))
setwd("~/QMB6316F24/demo_07_linear_regression")
tractor_sales <- read.csv('tractor_sales.csv')
summary(tractor_sales)
colnames(tractor_sales)
# Estimate a regression model.
lm_model_0 <- lm(data = tractor_sales,
formula = log(saleprice) ~ age + enghours +
johndeere +
spring + summer + winter)
# Output the results to screen.
summary(lm_model_0)
# Load the dataset of tractor specifications.
tractor_specs <- read.csv('tractor_specs.csv')
# Inspect the contents.
summary(tractor_specs)
# Make sure there are no problems with the data.
tractor_sales_specs <- merge(x = tractor_sales, y = tractor_specs)
summary(tractor_sales_specs)
colnames(tractor_sales_specs)
# Estimate a regression model.
lm_model_1 <- lm(data = tractor_sales_specs,
formula = log(saleprice) ~ horsepower + age + enghours +
diesel + fwd + manual + johndeere +
spring + summer + winter)
# Output the results to screen.
summary(lm_model_1)
tractor_cabs <- read.csv('tractors_with_cabs.csv')
View(tractor_cabs)
tractor_full <- merge(x = tractor_sales_specs, y = tractor_cabs)
summary(tractor_cabs)
tractor_full <- merge(x = tractor_sales_specs, y = tractor_cabs)
tractor_full <- merge(x = tractor_sales_specs, y = tractor_cabs,
all.x = TRUE)
tractor_cabs <- read.csv('tractors_with_cabs.csv')
summary(tractor_cabs)
tractor_full <- merge(x = tractor_sales_specs, y = tractor_cabs)
summary(tractor_full)
tractor_full <- merge(x = tractor_sales_specs, y = tractor_cabs,
all.x = TRUE)
summary(tractor_full)
sel_rows <- is.na(tractor_full[, 'cab'])
summary(sel_rows)
tractor_full[sel_rows, 'cab'] <- 0
summary(tractor_full)
colnames(tractor_full)
lm_model_2 <- lm(data = tractor_full,
formula = saleprice ~ horsepower + age + enghours +
diesel + fwd + manual + johndeere +
cab +
spring + summer + winter)
summary(lm_model_2)
write.csv(tractor_full, 'tractor_full.csv')
setwd("~/QMB6316F24/demo_07_linear_regression")
tractor_full <- read.csv('tractor_full.csv')
summary(tractor_full)
hist(tractor_full[, 'saleprice'])
tractor_full[, 'log_saleprice'] <- log(tractor_full[, 'saleprice'])
hist(tractor_full[, 'log_saleprice'])
tractor_full[, 'squared_horsepower'] <- tractor_full[, 'horsepower']^2
lm_model_1 <- lm(data = tractor_full,
formula = saleprice ~ horsepower + age + enghours +
diesel + fwd + manual + johndeere +
cab +
spring + summer + winter)
summary(lm_model_1)
lm_model_2 <- lm(data = tractor_full,
formula = log_saleprice ~ horsepower + age + enghours +
diesel + fwd + manual + johndeere +
cab +
spring + summer + winter)
summary(lm_model_2)
summary(tractor_full[, 'saleprice'])
summary(tractor_full[tractor_full[, 'johndeere'] == 1, 'saleprice'])
summary(tractor_full[tractor_full[, 'johndeere'] == 0, 'saleprice'])
lm_model_3 <- lm(data = tractor_full,
formula = log_saleprice ~ horsepower + age + enghours +
diesel + fwd + manual + johndeere +
cab)
summary(lm_model_3)
lm_model_4 <- lm(data = tractor_full,
formula = log_saleprice ~ horsepower + age + enghours +
diesel + fwd + johndeere +
cab)
# Output the results to screen.
summary(lm_model_4)
lm_model_5 <- lm(data = tractor_full,
formula = log_saleprice ~ horsepower + squared_horsepower +
age + enghours +
cab +
diesel + fwd + johndeere)
# Output the results to screen.
summary(lm_model_5)
lm_model_6 <- lm(data = tractor_full,
formula = log_saleprice ~ horsepower + squared_horsepower +
age + enghours +
cab +
# diesel +
fwd + johndeere)
# Output the results to screen.
summary(lm_model_6)
